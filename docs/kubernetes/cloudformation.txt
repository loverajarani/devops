
aws cloudformation create-stack --template-body file://ecs-cluster.template --stack-name EcsClusterStack --capabilities CAPABILITY_IAM --tags Key=Name,Value=ECS --region us-east-1 --parameters ParameterKey=KeyName,ParameterValue=awskey ParameterKey=EcsCluster,ParameterValue=getting-started ParameterKey=AsgMaxSize,ParameterValue=1

aws cloudformation create-stack --template-body file://ecs-jenkins-demo.template --stack-name JenkinsStack --capabilities CAPABILITY_IAM --tags Key=Name,Value=Jenkins --region us-east-1 --parameters ParameterKey=KeyName,ParameterValue=awskey --parameters ParameterKey=EcsStackName,ParameterValue=EcsClusterStack



plugins
Amazon ECR login
CloudBees Docker Build and Publish plugin

freestyle porject

https://github.com/jicowan/hello-world.git

aws ecr get-login --region us-east-1

execute shell
docker login -u AWS -p eyJwYXlsb2FkIjoiZUxvRXZpS1Jab1M0T1J4R1dvZ2I5UmdFWS80VnE1RzRHV005Y3BWQkQzSXhXTnA2bUthdDQzV0txV1BtaTlNcGZtZEU1VVhhUDJiaWN1bHRQTmZwMHFRTUx3TVI0T25mSXYzNWtuZ3BaWjloNDJROHU5T1MzMHR2QzcwM0xLWFAzVUI5Ym54TUVkRkpoMVhpRkFoZWgxZ0tzTDFNOURMOFZreUhBZDlUSEVTaTRDbkVHNnQ2eDhZTXJUMHplNHNvWERWMGZONjVRMHpjNHJ5RVltTmFjYzNWc0thTktGN2k5VUxkRWxCM1AyeTRmQVA4dTZEMFI5SUs2RzJwdk5XS2FQbVhrd3pHVjdPdGhZMXFVVWlpYjhpcnNjTWFkM0NCcmN5SGl6TUlQU05zVVU3OUVFcllDRjBPcG92Vi9wWnBaaHlWN1dxbUZPL2dUaTYrVUVqeFRKUGhkTHBaT25ITjYzVm5WYS9ybE02cGE3Rmhta0pyK0N0dWlhWUE4T0xtekg1ZGZsLzdNUE5jREVwbWYySHc5VUIycnJ6UTFJblpwQ0pBbU0wNkVoSno2bnhWcklpWWxWYzlhRUZ4YmJZaVBjSDVFMngzNmlsNTEzdWlQbk96K1lQaUhlblRucWpCMk16bkxvRFpZUm4vN1cvcnA1cnl5U01WUjhDYWxyZ3hKcGRSc3VmR3lKdzZ4dnpHcGZkMTZOTW9SVnMvTHVXMWRHb2pWVHRUWHJpbHZ0QkVVY0JZSmV4SEt1cjdnalVZQ09TbDlNUUY2Mkh1WkhTNVhnNkpWM1hISDd6a2N6Q1B1bElRVFZjVUZXeDI0UEV2dU1ENUpvWE1EV0Y2TjlocVd6RXhwYmkyM0VBMWZvMEdEREp4aUtWUUNCeU5hWm9ieEJoYzBnOXV4UldpUTQwWDMvcFJZekZYVFlOeVhZaDJWY2JjWVhTNEcxdGI3djhRMlgvNGZITWlvTkpraEtxMnJkbENIYWMzOC9wQVM2aWR1M1QvdUZVSU03VUd2WnJkWml5NDhlR2RLd2ZmVmVOOEhNbXhqZ1RxTzZhc1dZemt3ZWpvYXNRNjdvUDNiLzlpa1VUa3JBa1p4SUEyYkdoL21Tek1BOWZaSXZpRk1ueGdKWWZrdnUyU2lVeHowMFNNNzBLZXF1bnNJcjZCK2U0azNLM2VyVFJITFZWQm4zWXdHZDA0YXdDK0lKMXliQUMrdHpvamMvcUNKbS8zS3lsUjZnc3ZBdVdTNURYYlJYREZnYjhIWWlHWXFJNXVBM0dqQTJRRDl3cEl0M2dDNjZmR2xSRTJJbDNienNPdk1lbG52VkhETVoxYUpndGZGRUVSZ1I4Y1g5a09iZklsdmtUOEhyandvK3htRVhHUytYVStPL1BkVnIyc1N5Y05qVUdUMitTNllFSXluNE8zM0tiTTQ0NUNqMEZFbGZMeHRNc2x5YjA9IiwiZGF0YWtleSI6IkFRRUJBSGh3bTBZYUlTSmVSdEptNW4xRzZ1cWVla1h1b1hYUGU1VUZjZTlScTgvMTR3QUFBSDR3ZkFZSktvWklodmNOQVFjR29HOHdiUUlCQURCb0Jna3Foa2lHOXcwQkJ3RXdIZ1lKWUlaSUFXVURCQUV1TUJFRUROd05VL3g1K0MvUHFpNitFd0lCRUlBN0FqbGNBUjVLaXBkL0hDcVh2dElJdmRIY0N3UmlJR1J3djgzVGhOMmhwODdTZ3R5SkZEV0xlcE9qcHJ1VVFIUlZGd3RxOWs2Wk1GQUpGL3c9IiwidmVyc2lvbiI6IjIiLCJ0eXBlIjoiREFUQV9LRVkiLCJleHBpcmF0aW9uIjoxNTQzOTgzMTY4fQ== https://580781916198.dkr.ecr.us-east-1.amazonaws.com


Docker Build and Publish
Repository Name:  hello-world
Tag: v_$BUILD_NUMBER
Docker registry URL: https://580781916198.dkr.ecr.us-east-1.amazonaws.com

aws ecr create-repository --repository-name hello-world --region us-east-1

Execute Shell

#!/bin/bash
#Constants

REGION=us-east-1
REPOSITORY_NAME=hello-world
CLUSTER=getting-started
FAMILY=`sed -n 's/.*"family": "\(.*\)",/\1/p' taskdef.json`
NAME=`sed -n 's/.*"name": "\(.*\)",/\1/p' taskdef.json`
SERVICE_NAME=${NAME}-service

#Store the repositoryUri as a variable
REPOSITORY_URI=`aws ecr describe-repositories --repository-names ${REPOSITORY_NAME} --region ${REGION} | jq .repositories[].repositoryUri | tr -d '"'`

#Replace the build number and respository URI placeholders with the constants above
sed -e "s;%BUILD_NUMBER%;${BUILD_NUMBER};g" -e "s;%REPOSITORY_URI%;${REPOSITORY_URI};g" taskdef.json > ${NAME}-v_${BUILD_NUMBER}.json
#Register the task definition in the repository
aws ecs register-task-definition --family ${FAMILY} --cli-input-json file://${WORKSPACE}/${NAME}-v_${BUILD_NUMBER}.json --region ${REGION}
SERVICES=`aws ecs describe-services --services ${SERVICE_NAME} --cluster ${CLUSTER} --region ${REGION} | jq .failures[]`
#Get latest revision
REVISION=`aws ecs describe-task-definition --task-definition ${NAME} --region ${REGION} | jq .taskDefinition.revision`

#Create or update service
if [ "$SERVICES" == "" ]; then
  echo "entered existing service"
  DESIRED_COUNT=`aws ecs describe-services --services ${SERVICE_NAME} --cluster ${CLUSTER} --region ${REGION} | jq .services[].desiredCount`
  if [ ${DESIRED_COUNT} = "0" ]; then
    DESIRED_COUNT="1"
  fi
  aws ecs update-service --cluster ${CLUSTER} --region ${REGION} --service ${SERVICE_NAME} --task-definition ${FAMILY}:${REVISION} --desired-count ${DESIRED_COUNT}
else
  echo "entered new service"
  aws ecs create-service --service-name ${SERVICE_NAME} --desired-count 1 --task-definition ${FAMILY} --cluster ${CLUSTER} --region ${REGION}
fi








--------------------------
s3 bucket
https://www.youtube.com/watch?v=ymZSJpAIhnM
artifacts to s3 bucket
https://www.youtube.com/watch?v=YCiTqyA1njg
https://www.youtube.com/watch?v=IGKyhapIwMo

------------------------------------
git 
https://www.youtube.com/watch?v=YEDjfd-OXhY